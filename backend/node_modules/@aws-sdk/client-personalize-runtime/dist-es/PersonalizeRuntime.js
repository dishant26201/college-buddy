import { GetPersonalizedRankingCommand, } from "./commands/GetPersonalizedRankingCommand";
import { GetRecommendationsCommand, } from "./commands/GetRecommendationsCommand";
import { PersonalizeRuntimeClient } from "./PersonalizeRuntimeClient";
export class PersonalizeRuntime extends PersonalizeRuntimeClient {
    getPersonalizedRanking(args, optionsOrCb, cb) {
        const command = new GetPersonalizedRankingCommand(args);
        if (typeof optionsOrCb === "function") {
            this.send(command, optionsOrCb);
        }
        else if (typeof cb === "function") {
            if (typeof optionsOrCb !== "object")
                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);
            this.send(command, optionsOrCb || {}, cb);
        }
        else {
            return this.send(command, optionsOrCb);
        }
    }
    getRecommendations(args, optionsOrCb, cb) {
        const command = new GetRecommendationsCommand(args);
        if (typeof optionsOrCb === "function") {
            this.send(command, optionsOrCb);
        }
        else if (typeof cb === "function") {
            if (typeof optionsOrCb !== "object")
                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);
            this.send(command, optionsOrCb || {}, cb);
        }
        else {
            return this.send(command, optionsOrCb);
        }
    }
}
